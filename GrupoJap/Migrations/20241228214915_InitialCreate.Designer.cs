// <auto-generated />
using System;
using GrupoJap.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrupoJap.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241228214915_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GrupoJap.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CartaConducao")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d74e1db1-beee-4fbc-bd53-82f1dab5b609"),
                            CartaConducao = true,
                            Email = "luisousa2002@gmail.com",
                            NomeCompleto = "Luis Borges Sousa",
                            Telefone = "925195028"
                        });
                });

            modelBuilder.Entity("GrupoJap.Models.ContratoAluguer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuilometragemInicial")
                        .HasColumnType("int");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("ContratoAluguer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a138d50c-9853-48ed-9358-80c5b63b3248"),
                            ClienteId = new Guid("d74e1db1-beee-4fbc-bd53-82f1dab5b609"),
                            DataFim = new DateTime(2025, 1, 2, 21, 49, 14, 832, DateTimeKind.Local).AddTicks(6034),
                            DataInicio = new DateTime(2024, 12, 28, 21, 49, 14, 831, DateTimeKind.Local).AddTicks(24),
                            QuilometragemInicial = 0,
                            VeiculoId = new Guid("d275f7a7-e4de-41ef-a79f-56997c37b2fc")
                        });
                });

            modelBuilder.Entity("GrupoJap.Models.TipoCombustivel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descritivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoCombustivel");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a9737c8-2a6e-4ad6-b480-44ba3502dc2e"),
                            Descritivo = "Diesel"
                        },
                        new
                        {
                            Id = new Guid("85bfdd65-9bb3-4a79-bb26-d171fdca6722"),
                            Descritivo = "Gasolina"
                        },
                        new
                        {
                            Id = new Guid("b1b992fb-c080-4e4a-b138-1e3f1352c96f"),
                            Descritivo = "GPL"
                        });
                });

            modelBuilder.Entity("GrupoJap.Models.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnoFabrico")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipoCombustivelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TipoCombustivelId");

                    b.ToTable("Veiculo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d275f7a7-e4de-41ef-a79f-56997c37b2fc"),
                            AnoFabrico = 2010,
                            Estado = false,
                            Marca = "Ford",
                            Matricula = "88-JZ-33",
                            Modelo = "Fiesta",
                            TipoCombustivelId = new Guid("7a9737c8-2a6e-4ad6-b480-44ba3502dc2e")
                        });
                });

            modelBuilder.Entity("GrupoJap.Models.ContratoAluguer", b =>
                {
                    b.HasOne("GrupoJap.Models.Cliente", "Cliente")
                        .WithMany("Contratos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrupoJap.Models.Veiculo", "Veiculo")
                        .WithMany("Contratos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("GrupoJap.Models.Veiculo", b =>
                {
                    b.HasOne("GrupoJap.Models.TipoCombustivel", "TipoCombustivel")
                        .WithMany()
                        .HasForeignKey("TipoCombustivelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCombustivel");
                });

            modelBuilder.Entity("GrupoJap.Models.Cliente", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("GrupoJap.Models.Veiculo", b =>
                {
                    b.Navigation("Contratos");
                });
#pragma warning restore 612, 618
        }
    }
}
